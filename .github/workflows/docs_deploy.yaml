name: Docs Deploy

on:
  push:
    branches: [master]
    paths: 
       - '.github/workflows/docs_deploy.yaml'
       - 'docs/**'
       - 'samples/**'
  workflow_dispatch:
    inputs:
      target:
        type: choice
        description: 'Environment'
        required: true
        options:
          - development
          - production

env:
  ENV: ${{ (startsWith(github.ref, 'refs/tags/forui') || inputs.target == 'production') && 'production' || 'development' }}

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: docs
  cancel-in-progress: false

jobs:
  docs:
    name: Deploy Docs
    runs-on: ubuntu-latest
    environment: ${{ env.ENV }}
    defaults:
      run:
        working-directory: ./docs
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/configure-pages@v4

      - run: pnpm install
      - run: NEXT_PUBLIC_DEMO_URL=${{ env.DEMO_URL }} pnpm run export

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.CLOUDFLARE_DOCS_PROJECT_NAME }}
          directory: ./docs/out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  samples:
    name: Deploy Samples
    runs-on: ubuntu-latest
    environment: ${{ env.ENV }}
    defaults:
      run:
        working-directory: ./samples
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: subosito/flutter-action@v2.12.0
        with:
          cache: true

      - run: flutter pub get
      - run: flutter build web

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.CLOUDFLARE_DEMO_PROJECT_NAME }}
          directory: ./samples/build/web
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
