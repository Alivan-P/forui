import 'package:forui/forui.dart';
import 'package:flutter/material.dart';

/// Generated by Forui CLI.
///
/// Modify the generated function bodies to create your own custom style.
/// Then, call the modified functions and pass the results to your FThemeData.
///
/// ### Example
/// Generated style:
/// ```dart
/// // Modify this function's body.
/// FDividerStyles dividerStyles({
///   required FColorScheme color,
///   required FStyle style,
/// }) => FDividerStyles(
///   horizontalStyle: FDividerStyle(
///     colors: colors.secondary,
///     padding: FDividerStyle.defaultPadding.horizontalStyle,
///     width: style.borderWidth,
///   ),
///   verticalStyle: FDividerStyle(
///     colors: colors.secondary,
///     padding: FDividerStyle.defaultPadding.verticalStyle,
///     width: style.borderWidth,
///   ),
/// );

/// File that contains your `FThemeData`:
/// ```dart
/// import 'package:my_application/theme/divider_style.dart' // Your generated style file.
///
/// FThemeData(
///  color: FThemes.zinc.light.color,
///  style: FThemes.zinc.light.style,
///  dividerStyles: CustomFDividerStyles.dividerStyles( // The function in your generated style file.
///    color: FThemes.zinc.light.color,
///    style: FThemes.zinc.light.style,
///   ),
/// );
/// ```
///
/// A theme can be generated using the Forui CLI:
/// ```shell
/// dart forui theme create [theme name]
/// ```
///
/// See https://forui.dev/docs/themes#customize-themes for more information.
FCalendarDayPickerStyle calendarDayPickerStyle({
  required FColors colors,
  required FTypography typography,
}) {
  final mutedTextStyle = typography.base.copyWith(
    color: colors.disable(colors.mutedForeground),
    fontWeight: FontWeight.w500,
  );
  final background = {
    WidgetState.disabled & WidgetState.selected: colors.primaryForeground,
    WidgetState.disabled: colors.background,
  };
  final border = {
    WidgetState.disabled & WidgetState.selected & WidgetState.focused:
        colors.primaryForeground,
    WidgetState.disabled & WidgetState.focused: colors.background,
    WidgetState.focused: colors.foreground,
  };
  return FCalendarDayPickerStyle(
    headerTextStyle: typography.xs.copyWith(color: colors.mutedForeground),
    current: FCalendarEntryStyle(
      backgroundColor: FWidgetStateMap({
        ...background,
        WidgetState.selected: colors.foreground,
        ~WidgetState.selected & (WidgetState.hovered | WidgetState.pressed):
            colors.secondary,
        WidgetState.any: colors.background,
      }),
      borderColor: FWidgetStateMap(border),
      textStyle: FWidgetStateMap({
        WidgetState.disabled: mutedTextStyle,
        WidgetState.selected: typography.base.copyWith(
          color: colors.background,
          fontWeight: FontWeight.w500,
        ),
        WidgetState.any: typography.base.copyWith(
          color: colors.foreground,
          fontWeight: FontWeight.w500,
        ),
      }),
      radius: const Radius.circular(4),
    ),
    enclosing: FCalendarEntryStyle(
      backgroundColor: FWidgetStateMap({
        ...background,
        WidgetState.selected: colors.primaryForeground,
        ~WidgetState.selected & (WidgetState.hovered | WidgetState.pressed):
            colors.secondary,
        WidgetState.any: colors.background,
      }),
      borderColor: FWidgetStateMap(border),
      textStyle: FWidgetStateMap.all(mutedTextStyle),
      radius: const Radius.circular(4),
    ),
  );
}
